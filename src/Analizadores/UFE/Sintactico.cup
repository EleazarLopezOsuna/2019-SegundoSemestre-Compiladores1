/*--------- 1ra Area: Codigo de Usuario ---------*/

//--------> Paquetes e importaciones
package Analizadores.UFE;
import java_cup.runtime.Symbol;
import Estructuras.*;
import Modelos.*;

//--------> Codigo para el parser, variables, metodos
parser code
{:
    public Arbol variables = new Arbol();
    public Cola TodosLosErrores = new Cola();

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s){
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        System.out.println("ERROR SINTACTICO");
        Errores error = new Errores(lexema,fila,columna,"Token " + lexema + " No esperado", "Sintactico");
        TodosLosErrores.insertar(error);
    }

    //Metodo al que se llama en el momento en el que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s){

    }
:}

//--------> Codigo para las acciones gramaticales
action code
{:
    
:}

/*--------- 2da Area: Declaraciones ---------*/

//--------> Declaracion de terminales
terminal multiplicacion, division, resta, suma, potencia, igual, igualigual, not;
terminal diferente, menorQue, mayorQue, menorIgual, mayorIgual;
terminal logicoAND, logicoOR, logicoXOR;
terminal parentesisA, parentesisC, llaveA, llaveC, corcheteA, corcheteC;
terminal dosPuntos, puntoComa, coma;
terminal var, component, id, x, y;
terminal height, width, color, border, className, render;
terminal retorno, panel, text, textField, button, list;
terminal element, item, defecto, spinner, min, max;
terminal image, fuente, importar, from, si;
terminal sino, repetir, imprimir, mientras;
terminal String identificador, entero, doble, booleano, cadena, caracter;

//--------> Declaracion de no terminales
non terminal S, INICIO;
non terminal DECLARACION, ASIGNACION, OPCIONES;
non terminal Object IDENT, IDENT2;
non terminal OPERADOR, FUNCIONES, SI, SINO, OPCIONESSI, OPCSI;
non terminal Object DATO, OPERACION, LISTAEXP;

//----> precedencia de menor a mayor
precedence left logicoOR;
precedence left logicoAND;
precedence left logicoXOR;
precedence left not;
precedence left igualigual, diferente, mayorQue, menorIgual, menorQue, mayorIgual;
precedence left suma, resta;
precedence left multiplicacion, division;
precedence left potencia;
precedence left parentesisA;

start with S;

/*--------- 3ra Area: Reglas Semanticas ---------*/

S ::= INICIO
    ;
INICIO ::= INICIO OPCIONES
    | OPCIONES
    ;
OPCIONES ::= DECLARACION
    | OPERACION:a
{:
    if(a != null){
        System.out.println(a);
    } else {
        System.out.println("ERROR: error aritmetico");
    }
:}
    | FUNCIONES
    ;
DECLARACION ::= var ASIGNACION puntoComa
    ;
ASIGNACION ::= ASIGNACION coma identificador:a IDENT:b
{:
    if(b != null){
        String nombre = a;
        nombre = nombre.toLowerCase();
        Variable var = new Variable(nombre, b);
        if(!variables.insertar(var).equals("Ingresada")){
            System.out.println("ERROR: Variable duplicada");
        }
    }else{
        String nombre = a;
        nombre = nombre.toLowerCase();
        Variable var = new Variable(nombre);
        if(!variables.insertar(var).equals("Ingresada")){
            System.out.println("ERROR: Variable duplicada");
        }
    }
:}
    | identificador:a IDENT:b
{:
    if(b != null){
        if(b instanceof String[]){
        
        } else {
            if(b instanceof Object[]){
            Object[] prueba = (Object[]) b;
            for(int i = 0; i < prueba.length; i++){
                System.out.println(a + "[" + i + "] = " + prueba[i]);
            }
    }
            String nombre = a;
            nombre = nombre.toLowerCase();
            Variable var = new Variable(nombre, b);
            if(!variables.insertar(var).equals("Ingresada")){
                System.out.println("ERROR: Variable duplicada");
            }
        }
    }else{
        String nombre = a;
        nombre = nombre.toLowerCase();
        Variable var = new Variable(nombre);
        if(!variables.insertar(var).equals("Ingresada")){
            System.out.println("ERROR: Variable duplicada");
        }
    }
:}
    ;
IDENT ::= igual OPERACION:a                                 
{: 
    RESULT = a; 
:}
    | corcheteA OPERACION:a corcheteC IDENT2:b
{:
    if(a instanceof Integer){
        if(b != null){
            int c = (int) a;
            Object retorno[] = new Object[c];
            if(b instanceof String){
                for(int i = 0; i < c; i++){
                    retorno[i] = 0;
                }
            } else {
                for(int i = 0; i < c; i++){
                    retorno[i] = b;
                }
            }
            RESULT = retorno;
        }
    } else {
        System.out.println("ERROR se esperaba dato entero");
        String retorno[] = new String[1];
        RESULT = retorno;
    }
:}
    |                                                   {: RESULT = ""; :}
    ;
LISTAEXP ::= LISTAEXP:a coma OPERACION:b
{:
    Object viejo[] = (Object[]) a;
    Object nuevo[] = new Object[viejo.length + 1];
    for(int i = 0; i < viejo.length; i++){
        nuevo[i] = viejo[i];
    }
    nuevo[viejo.length] = b;
    RESULT = nuevo;
:}
    | OPERACION:a
{:
    Object retorno[] = {a};
    RESULT = retorno;
:}
    ;
IDENT2 ::= igual OPERACION:a
{:
    if(a != null){
        RESULT = a;
    } else {
        System.out.println("ERROR se esperaba dato");
        RESULT = null;
    }
:}
    |                                                   {: RESULT = ""; :}
    ;
OPERACION ::= OPERACION:a suma OPERACION:b
{:
    if(a != null && b != null){
        if(a instanceof String || b instanceof String){
            String valor1 = String.valueOf(a);
            String valor2 = String.valueOf(b);
            String resultado = valor1 + valor2;
            RESULT = resultado;
        }else if((a instanceof java.lang.Double && b instanceof Integer) || (a instanceof Integer && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Character) ||(a instanceof java.lang.Character && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Double)){
            double resultado = Double.valueOf(String.valueOf(a)) + Double.valueOf(String.valueOf(b));
            RESULT = resultado;
        }else if(a instanceof java.lang.Character && b instanceof Integer){
            char uno = (char) a;
            int resultado = (int) uno + (int) b;
            RESULT = resultado;
        }else if(a instanceof Integer && b instanceof java.lang.Character){
            char dos = (char) b;
            int resultado = (int) a + (int) dos;
            RESULT = resultado;
        }else if(a instanceof java.lang.Character && b instanceof java.lang.Character){
            char uno = (char) a;
            char dos = (char) b;
            int resultado = (int) uno + (int) dos;
            RESULT = resultado;
        }else if(a instanceof Integer && b instanceof Integer){
            RESULT = (int) a + (int) b;
        }else{
            RESULT = null;
        }
    } else {
        RESULT = null;
    }
:}
    | OPERACION:a resta OPERACION:b
{:
    if(a != null && b != null){
        if((a instanceof java.lang.Double && b instanceof Integer) || (a instanceof Integer && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Character) ||(a instanceof java.lang.Character && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Double)){
            double resultado = Double.valueOf(String.valueOf(a)) - Double.valueOf(String.valueOf(b));
            RESULT = resultado;
        }else if(a instanceof java.lang.Character && b instanceof Integer){
            char uno = (char) a;
            int resultado = (int) uno - (int) b;
            RESULT = resultado;
        }else if(a instanceof Integer && b instanceof java.lang.Character){
            char dos = (char) b;
            int resultado = (int) a - (int) dos;
            RESULT = resultado;
        }else if(a instanceof java.lang.Character && b instanceof java.lang.Character){
            char uno = (char) a;
            char dos = (char) b;
            int resultado = (int) uno - (int) dos;
            RESULT = resultado;
        }else if(a instanceof Integer && b instanceof Integer){
            RESULT = (int) a - (int) b;
        }else{
            RESULT = null;
        }
    } else {
        RESULT = null;
    }
:}
    | OPERACION:a division OPERACION:b
{:
    if(a != null && b != null){
        boolean comprobador = true;
        if(b instanceof Double){
            double n = (double) b;
            if(n == 0.0){
                comprobador = false;
            }
        }
        if(b instanceof Integer){
            int n = (int) b;
            if(n == 0){
                comprobador = false;
            }
        }
        if(b instanceof java.lang.Character){
            int numero = (char) b;
            b = numero;
        }
        if(a instanceof java.lang.Character){
            int numero = (char) a;
            a = numero;
        }
        if(comprobador){
            if((a instanceof java.lang.Double && b instanceof Integer) || (a instanceof Integer && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Character) ||(a instanceof java.lang.Character && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Double)){
                double resultado = Double.valueOf(String.valueOf(a)) / Double.valueOf(String.valueOf(b));
                RESULT = resultado;
            }else if(a instanceof java.lang.Character && b instanceof Integer){
                char uno = (char) a;
                double resultado = Double.valueOf(String.valueOf(uno)) / Double.valueOf(String.valueOf(b));
                RESULT = resultado;
            }else if(a instanceof Integer && b instanceof java.lang.Character){
                char dos = (char) b;
                double resultado = Double.valueOf(String.valueOf(a)) / Double.valueOf(String.valueOf(dos));
                RESULT = resultado;
            }else if(a instanceof java.lang.Character && b instanceof java.lang.Character){
                char uno = (char) a;
                char dos = (char) b;
                double resultado = Double.valueOf(String.valueOf(uno)) / Double.valueOf(String.valueOf(dos));
                RESULT = resultado;
            }else if(a instanceof Integer && b instanceof Integer){
                double resultado = Double.valueOf(String.valueOf(a)) / Double.valueOf(String.valueOf(b));
                RESULT = resultado;
            }else{
                RESULT = null;
            }
        } else {
            RESULT = null;
        }
    } else {
        RESULT = null;
    }
:}
    | OPERACION:a potencia OPERACION:b
{:
    if(a != null && b != null){
        if((a instanceof java.lang.Double && b instanceof Integer) || (a instanceof Integer && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Character) ||(a instanceof java.lang.Character && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Double)){
            double base = Double.valueOf(String.valueOf(a));
            double exponente = Double.valueOf(String.valueOf(b));
            double resultado = Double.valueOf(String.valueOf((int) Math.pow(base, exponente)));
            RESULT = resultado;
        }else if(a instanceof java.lang.Character && b instanceof Integer){
            char uno = (char) a;
            int numero1 = (int) uno;
            int numero2 = (int) b;
            double base = Double.valueOf(String.valueOf(numero1));
            double exponente = Double.valueOf(String.valueOf(numero2));
            double resultado = Double.valueOf(String.valueOf((int) Math.pow(base, exponente)));
            RESULT = resultado;
        }else if(a instanceof Integer && b instanceof java.lang.Character){
            char dos = (char) b;
            int numero1 = (int) a;
            int numero2 = (int) dos;
            double base = Double.valueOf(String.valueOf(numero1));
            double exponente = Double.valueOf(String.valueOf(numero2));
            double resultado = Double.valueOf(String.valueOf((int) Math.pow(base, exponente)));
            RESULT = resultado;
        }else if(a instanceof java.lang.Character && b instanceof java.lang.Character){
            char uno = (char) a;
            char dos = (char) b;
            int numero1 = (int) uno;
            int numero2 = (int) dos;
            double base = Double.valueOf(String.valueOf(numero1));
            double exponente = Double.valueOf(String.valueOf(numero2));
            double resultado = Double.valueOf(String.valueOf((int) Math.pow(base, exponente)));
            RESULT = resultado;
        }else if(a instanceof Integer && b instanceof Integer){
            int base = (int) a;
            int exponente = (int) b;
            int resultado = (int) Math.pow(base, exponente);
            RESULT = resultado;
        }else{
            RESULT = null;
        }
    } else {
        RESULT = null;
    }
:}
    | OPERACION:a multiplicacion OPERACION:b
{:
    if(a != null && b != null){
        if((a instanceof java.lang.Double && b instanceof Integer) || (a instanceof Integer && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Character) ||(a instanceof java.lang.Character && b instanceof java.lang.Double) || (a instanceof java.lang.Double && b instanceof java.lang.Double)){
            double resultado = Double.valueOf(String.valueOf(a)) * Double.valueOf(String.valueOf(b));
            RESULT = resultado;
        }else if(a instanceof java.lang.Character && b instanceof Integer){
            char uno = (char) a;
            int resultado = (int) uno * (int) b;
            RESULT = resultado;
        }else if(a instanceof Integer && b instanceof java.lang.Character){
            char dos = (char) b;
            int resultado = (int) a * (int) dos;
            RESULT = resultado;
        }else if(a instanceof java.lang.Character && b instanceof java.lang.Character){
            char uno = (char) a;
            char dos = (char) b;
            int resultado = (int) uno * (int) dos;
            RESULT = resultado;
        }else if(a instanceof Integer && b instanceof Integer){
            int resultado = (int) a * (int) b;
            RESULT = resultado;
        }else{
            RESULT = null;
        }
    } else {
        RESULT = null;
    }
:}
    | parentesisA OPERACION:a parentesisC
{:
    RESULT = a;
:}
    | not OPERACION:a
{:
    if(a instanceof Boolean){
        boolean resultado = (boolean) a;
        RESULT = !resultado;
    } else {
        RESULT = null;
    }
:}
    | OPERACION:a diferente OPERACION:b
{:
    if(a instanceof Integer && b instanceof Integer){
        int numero1 = (int) a;
        int numero2 = (int) b;
        RESULT = numero1 != numero2;
    } else if(a instanceof Integer && b instanceof Double){
        int numero1 = (int) a;
        double numero2 = (double) b;
        RESULT = numero1 != numero2;
    } else if(a instanceof Double && b instanceof Integer){
        double numero1 = (double) a;
        int numero2 = (int) b;
        RESULT = numero1 != numero2;
    } else if(a instanceof Double && b instanceof Double){
        double numero1 = (double) a;
        double numero2 = (double) b;
        RESULT = numero1 != numero2;
    } else if(a instanceof Integer && b instanceof Character){
        int numero1 = (int) a;
        char numero2 = (char) b;
        RESULT = numero1 != numero2;
    } else if(a instanceof Character && b instanceof Integer){
        char numero1 = (char) a;
        int numero2 = (int) b;
        RESULT = numero1 != numero2;
    } else if(a instanceof Character && b instanceof Double){
        char numero1 = (char) a;
        double numero2 = (double) b;
        RESULT = numero1 != numero2;
    } else if(a instanceof Double && b instanceof Character){
        double numero1 = (double) a;
        char numero2 = (char) a;
        RESULT = numero1 != numero2;
    } else if(a instanceof Character && b instanceof Character){
        char numero1 = (char) a;
        char numero2 = (char) a;
        RESULT = numero1 != numero2;
    } else if(a instanceof String && b instanceof String){
        String numero1 = (String) a;
        String numero2 = (String) b;
        RESULT = !numero1.equals(numero2);
    }
:}
    | OPERACION:a igualigual OPERACION:b
{:
    if(a instanceof Integer && b instanceof Integer){
        int numero1 = (int) a;
        int numero2 = (int) b;
        RESULT = numero1 == numero2;
    } else if(a instanceof Integer && b instanceof Double){
        int numero1 = (int) a;
        double numero2 = (double) b;
        RESULT = numero1 == numero2;
    } else if(a instanceof Double && b instanceof Integer){
        double numero1 = (double) a;
        int numero2 = (int) b;
        RESULT = numero1 == numero2;
    } else if(a instanceof Double && b instanceof Double){
        double numero1 = (double) a;
        double numero2 = (double) b;
        RESULT = numero1 == numero2;
    } else if(a instanceof Integer && b instanceof Character){
        int numero1 = (int) a;
        char numero2 = (char) b;
        RESULT = numero1 == numero2;
    } else if(a instanceof Character && b instanceof Integer){
        char numero1 = (char) a;
        int numero2 = (int) b;
        RESULT = numero1 == numero2;
    } else if(a instanceof Character && b instanceof Double){
        char numero1 = (char) a;
        double numero2 = (double) b;
        RESULT = numero1 == numero2;
    } else if(a instanceof Double && b instanceof Character){
        double numero1 = (double) a;
        char numero2 = (char) a;
        RESULT = numero1 == numero2;
    } else if(a instanceof Character && b instanceof Character){
        char numero1 = (char) a;
        char numero2 = (char) a;
        RESULT = numero1 == numero2;
    } else if(a instanceof String && b instanceof String){
        String numero1 = (String) a;
        String numero2 = (String) b;
        RESULT = numero1.equals(numero2);
    }
:}
    | OPERACION:a menorQue OPERACION:b
{:
    if(a instanceof Integer && b instanceof Integer){
        int numero1 = (int) a;
        int numero2 = (int) b;
        RESULT = numero1 < numero2;
    } else if(a instanceof Integer && b instanceof Double){
        int numero1 = (int) a;
        double numero2 = (double) b;
        RESULT = numero1 < numero2;
    } else if(a instanceof Double && b instanceof Integer){
        double numero1 = (double) a;
        int numero2 = (int) b;
        RESULT = numero1 < numero2;
    } else if(a instanceof Double && b instanceof Double){
        double numero1 = (double) a;
        double numero2 = (double) b;
        RESULT = numero1 < numero2;
    } else if(a instanceof Integer && b instanceof Character){
        int numero1 = (int) a;
        char numero2 = (char) b;
        RESULT = numero1 < numero2;
    } else if(a instanceof Character && b instanceof Integer){
        char numero1 = (char) a;
        int numero2 = (int) b;
        RESULT = numero1 < numero2;
    } else if(a instanceof Character && b instanceof Double){
        char numero1 = (char) a;
        double numero2 = (double) b;
        RESULT = numero1 < numero2;
    } else if(a instanceof Double && b instanceof Character){
        double numero1 = (double) a;
        char numero2 = (char) a;
        RESULT = numero1 < numero2;
    } else if(a instanceof Character && b instanceof Character){
        char numero1 = (char) a;
        char numero2 = (char) a;
        RESULT = numero1 < numero2;
    }
:}
    | OPERACION:a mayorQue OPERACION:b
{:
    if(a instanceof Integer && b instanceof Integer){
        int numero1 = (int) a;
        int numero2 = (int) b;
        RESULT = numero1 > numero2;
    } else if(a instanceof Integer && b instanceof Double){
        int numero1 = (int) a;
        double numero2 = (double) b;
        RESULT = numero1 > numero2;
    } else if(a instanceof Double && b instanceof Integer){
        double numero1 = (double) a;
        int numero2 = (int) b;
        RESULT = numero1 > numero2;
    } else if(a instanceof Double && b instanceof Double){
        double numero1 = (double) a;
        double numero2 = (double) b;
        RESULT = numero1 > numero2;
    } else if(a instanceof Integer && b instanceof Character){
        int numero1 = (int) a;
        char numero2 = (char) b;
        RESULT = numero1 > numero2;
    } else if(a instanceof Character && b instanceof Integer){
        char numero1 = (char) a;
        int numero2 = (int) b;
        RESULT = numero1 > numero2;
    } else if(a instanceof Character && b instanceof Double){
        char numero1 = (char) a;
        double numero2 = (double) b;
        RESULT = numero1 > numero2;
    } else if(a instanceof Double && b instanceof Character){
        double numero1 = (double) a;
        char numero2 = (char) a;
        RESULT = numero1 > numero2;
    } else if(a instanceof Character && b instanceof Character){
        char numero1 = (char) a;
        char numero2 = (char) a;
        RESULT = numero1 > numero2;
    }
:}
    | OPERACION:a menorIgual OPERACION:b
{:
    if(a instanceof Integer && b instanceof Integer){
        int numero1 = (int) a;
        int numero2 = (int) b;
        RESULT = numero1 <= numero2;
    } else if(a instanceof Integer && b instanceof Double){
        int numero1 = (int) a;
        double numero2 = (double) b;
        RESULT = numero1 <= numero2;
    } else if(a instanceof Double && b instanceof Integer){
        double numero1 = (double) a;
        int numero2 = (int) b;
        RESULT = numero1 <= numero2;
    } else if(a instanceof Double && b instanceof Double){
        double numero1 = (double) a;
        double numero2 = (double) b;
        RESULT = numero1 <= numero2;
    } else if(a instanceof Integer && b instanceof Character){
        int numero1 = (int) a;
        char numero2 = (char) b;
        RESULT = numero1 <= numero2;
    } else if(a instanceof Character && b instanceof Integer){
        char numero1 = (char) a;
        int numero2 = (int) b;
        RESULT = numero1 <= numero2;
    } else if(a instanceof Character && b instanceof Double){
        char numero1 = (char) a;
        double numero2 = (double) b;
        RESULT = numero1 <= numero2;
    } else if(a instanceof Double && b instanceof Character){
        double numero1 = (double) a;
        char numero2 = (char) a;
        RESULT = numero1 <= numero2;
    } else if(a instanceof Character && b instanceof Character){
        char numero1 = (char) a;
        char numero2 = (char) a;
        RESULT = numero1 <= numero2;
    }
:}
    | OPERACION:a mayorIgual OPERACION:b
{:
    if(a instanceof Integer && b instanceof Integer){
        int numero1 = (int) a;
        int numero2 = (int) b;
        RESULT = numero1 >= numero2;
    } else if(a instanceof Integer && b instanceof Double){
        int numero1 = (int) a;
        double numero2 = (double) b;
        RESULT = numero1 >= numero2;
    } else if(a instanceof Double && b instanceof Integer){
        double numero1 = (double) a;
        int numero2 = (int) b;
        RESULT = numero1 >= numero2;
    } else if(a instanceof Double && b instanceof Double){
        double numero1 = (double) a;
        double numero2 = (double) b;
        RESULT = numero1 >= numero2;
    } else if(a instanceof Integer && b instanceof Character){
        int numero1 = (int) a;
        char numero2 = (char) b;
        RESULT = numero1 >= numero2;
    } else if(a instanceof Character && b instanceof Integer){
        char numero1 = (char) a;
        int numero2 = (int) b;
        RESULT = numero1 >= numero2;
    } else if(a instanceof Character && b instanceof Double){
        char numero1 = (char) a;
        double numero2 = (double) b;
        RESULT = numero1 >= numero2;
    } else if(a instanceof Double && b instanceof Character){
        double numero1 = (double) a;
        char numero2 = (char) a;
        RESULT = numero1 >= numero2;
    } else if(a instanceof Character && b instanceof Character){
        char numero1 = (char) a;
        char numero2 = (char) a;
        RESULT = numero1 >= numero2;
    }
:}
    | OPERACION:a logicoAND OPERACION:b
{:
    if(a instanceof Boolean && b instanceof Boolean){
        boolean valor1 = (boolean) a;
        boolean valor2 = (boolean) b;
        RESULT = valor1 && valor2;
    }
:}
    | OPERACION:a logicoOR OPERACION:b
{:
    if(a instanceof Boolean && b instanceof Boolean){
        boolean valor1 = (boolean) a;
        boolean valor2 = (boolean) b;
        RESULT = valor1 || valor2;
    }
:}
    | OPERACION:a logicoXOR OPERACION:b
{:
    if(a instanceof Boolean && b instanceof Boolean){
        boolean valor1 = (boolean) a;
        boolean valor2 = (boolean) b;
        RESULT = valor1^valor2;
    }
:}
    | DATO:a
{:
    if(a == null){
        RESULT = null;
    }else{
        RESULT = a;
    }
:}
    | llaveA LISTAEXP:a llaveC
{:
    RESULT = a;
:}
    ;
DATO ::= entero:a
{:
    int retorno = Integer.parseInt(String.valueOf(a));
    RESULT = retorno;
:}
    | doble:a
{:
    double retorno = Double.parseDouble(String.valueOf(a));
    RESULT = retorno;
:}
    | cadena:a
{:
    String retorno = String.valueOf(a);
    retorno = retorno.replace("\"", "");
    RESULT = retorno;
:}
    | caracter:a
{:
    String valor = String.valueOf(a);
    char retorno = valor.charAt(1);
    RESULT = retorno;
:}
    | booleano:a
{:
    String dato = String.valueOf(a);
    boolean retorno = false;
    if(dato.equals("true")){
        retorno = true;
    }
    RESULT = retorno;
:}
    | identificador:a                                     
{: 
    String nombre = a.toLowerCase();
    if(variables.getRaiz() != null){
        Variable var = variables.obtenerValor(nombre, variables.getRaiz());
        Object valor = var.getContenido();
        if(valor != null){
            RESULT = valor;
     }else{
            System.out.println("ERROR: Variable no inicializada");
            RESULT = null;
        }
    }else{
        System.out.println("ERROR: Variable no inicializada");
        RESULT = null;
    }
:}
    ;
FUNCIONES ::= SI
    ;
SI ::= si parentesisA OPERACION parentesisC llaveA OPCSI llaveC SINO
    ;
SINO ::= sino OPCIONESSI
    |
    ;
OPCIONESSI ::= SI
    | llaveA OPCSI llaveC
    ;
OPCSI ::= INICIO
    | 
    ;